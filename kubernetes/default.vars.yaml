# Note: For {dev.,beta.,}conikuvat.fi and larppikuvat.fi, djangoapp_tag is overridden in Jenkinsfile.

# App specific settings
infokala_default_event: example

# Kompassi OAuth2 (NOTE: do not set if djangoapp_secret_managed: false)
kompassi_client_id: ''
kompassi_client_secret: ''
crowd_application_name: ''
crowd_application_password: ''

# Note: If you use Skaffold/Emskaffolden, leave these at defaults and let Skaffold manage the images
djangoapp_name: atlasso
djangoapp_image: !Var djangoapp_name

# Whether the secret of the name !Var djangoapp_name is managed by these templates or manually created
djangoapp_secret_managed: true

# A list of "Full Name <email@example.com>", no commas
djangoapp_admins: []

# djangoapp_tag: staging
# djangoapp_repository: harbor.con2.fi/con2/djangoapp
# djangoapp_image: !Format "{djangoapp_repository}:{djangoapp_tag}"
# djangoapp_static_image: !Format "{djangoapp_repository}-static:{djangoapp_tag}"

smtp_server: ''
smtp_default_from_email: ''

# Set this to the public hostname of your service.
ingress_public_hostname: !Format "{djangoapp_name}.localhost"

# If you use ingress-nginx and cert-manager, TLS can be automatically configured by setting this to true.
ingress_letsencrypt_enabled: false
ingress_letsencrypt_cluster_issuer: letsencrypt-prod

# Configuration vars end here. Configuration snippets follow. May be overridden for advanced configuration.

# Security context for djangoapp and Celery pods
# User 1000 is guaranteed to exist in the Docker image, only change if you know what you're doing
gunicorn_pod_security_context:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
gunicorn_container_security_context:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

# Common environment vars for both djangoapp and celery pods.
gunicorn_environment:
  - name: SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: secretKey
  - name: KOMPASSI_OAUTH2_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: kompassiClientId
  - name: KOMPASSI_OAUTH2_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: kompassiClientSecret
  - name: ALLOWED_HOSTS
    value: !Var ingress_public_hostname
  - name: EMAIL_HOST
    value: !Var smtp_server
  - name: DEFAULT_FROM_EMAIL
    value: !Var smtp_default_from_email
  - name: ADMINS
    value: !Join
      items: !Var djangoapp_admins
      separator: ","
  - name: KOMPASSI_CROWD_APPLICATION_NAME
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: crowdApplicationName
  - name: KOMPASSI_CROWD_APPLICATION_PASSWORD
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: crowdApplicationPassword
  - name: KOMPASSI_OAUTH2_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: kompassiClientId
  - name: KOMPASSI_OAUTH2_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: kompassiClientSecret

# Default annotations work for nginx ingress with or without LetsEncrypt TLS. Override if you need something else.
ingress_annotations: !If
  test: !Var ingress_letsencrypt_enabled
  then:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

ingress_tls: !If
  test: !Var ingress_letsencrypt_enabled
  then:
    - secretName: ingress-letsencrypt
      hosts:
        - !Var ingress_public_hostname
